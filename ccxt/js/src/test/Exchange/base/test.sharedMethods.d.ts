declare function logTemplate(exchange: any, method: any, entry: any): string;
declare function assertStructure(exchange: any, method: any, entry: any, format: any, emptyNotAllowedFor?: any[]): void;
declare function assertTimestamp(exchange: any, method: any, entry: any, nowToCheck?: any, keyName?: any): void;
declare function assertCurrencyCode(exchange: any, method: any, entry: any, actualCode: any, expectedCode?: any): void;
declare function assertSymbol(exchange: any, method: any, entry: any, key: any, expectedSymbol?: any): void;
declare function assertGreater(exchange: any, method: any, entry: any, key: any, compareTo: any): void;
declare function assertGreaterOrEqual(exchange: any, method: any, entry: any, key: any, compareTo: any): void;
declare function assertLess(exchange: any, method: any, entry: any, key: any, compareTo: any): void;
declare function assertLessOrEqual(exchange: any, method: any, entry: any, key: any, compareTo: any): void;
declare function assertInArray(exchange: any, method: any, entry: any, key: any, expectedArray: any): void;
declare function assertFee(exchange: any, method: any, entry: any): void;
declare function assertFees(exchange: any, method: any, entry: any): void;
declare function assertTimestampOrder(exchange: any, method: any, codeOrSymbol: any, items: any, ascending?: boolean): void;
declare const _default: {
    logTemplate: typeof logTemplate;
    assertTimestamp: typeof assertTimestamp;
    assertStructure: typeof assertStructure;
    assertSymbol: typeof assertSymbol;
    assertCurrencyCode: typeof assertCurrencyCode;
    assertInArray: typeof assertInArray;
    assertFee: typeof assertFee;
    assertFees: typeof assertFees;
    assertTimestampOrder: typeof assertTimestampOrder;
    assertGreater: typeof assertGreater;
    assertGreaterOrEqual: typeof assertGreaterOrEqual;
    assertLess: typeof assertLess;
    assertLessOrEqual: typeof assertLessOrEqual;
};
export default _default;
